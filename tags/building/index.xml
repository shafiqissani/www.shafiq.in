<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shafiq Alibhai </title>
    <link>https://www.shafiq.in/tags/building/</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2016</rights>
    <updated>2011-05-10 00:01:40 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Notes on build script</title>
          <link>https://www.shafiq.in/2011/05/10/notes-on-build-script/</link>
          <pubDate>Tue, 10 May 2011 00:01:40 UTC</pubDate>
          <author></author>
          <guid>https://www.shafiq.in/2011/05/10/notes-on-build-script/</guid>
          <description>&lt;ul&gt;
&lt;li&gt;Choose a language that can be used in &lt;a class=&#34;zem_slink&#34; title=&#34;Cross-platform&#34; href=&#34;http://en.wikipedia.org/wiki/Cross-platform&#34; rel=&#34;wikipedia&#34;&gt;multiple platforms&lt;/a&gt; (very important for a &lt;a class=&#34;zem_slink&#34; title=&#34;Java (programming language)&#34; href=&#34;http://www.oracle.com/technetwork/java/&#34; rel=&#34;homepage&#34;&gt;Java&lt;/a&gt; project)&lt;/li&gt;
&lt;li&gt;Ensure that as many steps are automated. Begin with a full clean up and allow full &lt;a class=&#34;zem_slink&#34; title=&#34;Software build&#34; href=&#34;http://en.wikipedia.org/wiki/Software_build&#34; rel=&#34;wikipedia&#34;&gt;build&lt;/a&gt; and deployment to the server&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;zem_slink&#34; title=&#34;Automation&#34; href=&#34;http://en.wikipedia.org/wiki/Automation&#34; rel=&#34;wikipedia&#34;&gt;Automate&lt;/a&gt; even server restart to increase developer efficiency&lt;/li&gt;
&lt;li&gt;Each build should ensure that it recompiles all classes and optionally fetches latest code from the repository&lt;/li&gt;
&lt;li&gt;Stale references to others code is the most frequent offense among developers. So use the build script to enforce some discipline too&lt;/li&gt;
&lt;li&gt;While writing a build script, one needs to take care of small short cuts that can help in a faster build and deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Deploy only &lt;a class=&#34;zem_slink&#34; title=&#34;HTML&#34; href=&#34;http://en.wikipedia.org/wiki/HTML&#34; rel=&#34;wikipedia&#34;&gt;HTML&lt;/a&gt; and &lt;a class=&#34;zem_slink&#34; title=&#34;JavaServer Pages&#34; href=&#34;http://en.wikipedia.org/wiki/JavaServer_Pages&#34; rel=&#34;wikipedia&#34;&gt;JSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deploy only compiled java classes&lt;/li&gt;
&lt;li&gt;Do only a restart&lt;/li&gt;
&lt;li&gt;Deploy only properties files&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;This is not a default option and one should not spend time at this in the beginning. This is a step more relevant to iterative improvement of the build script&lt;/li&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Release Engineering 101 - Build Script</title>
          <link>https://www.shafiq.in/2011/05/08/release-engineering-101-build-script/</link>
          <pubDate>Sun, 08 May 2011 02:07:16 UTC</pubDate>
          <author></author>
          <guid>https://www.shafiq.in/2011/05/08/release-engineering-101-build-script/</guid>
          <description>&lt;p&gt;Each &lt;a class=&#34;zem_slink&#34; title=&#34;Computing platform&#34; href=&#34;http://en.wikipedia.org/wiki/Computing_platform&#34; rel=&#34;wikipedia&#34;&gt;software platform&lt;/a&gt; will provide a way to write a script and invoke a sequence of &lt;a class=&#34;zem_slink&#34; title=&#34;Software build&#34; href=&#34;http://en.wikipedia.org/wiki/Software_build&#34; rel=&#34;wikipedia&#34;&gt;build&lt;/a&gt; steps &lt;a class=&#34;zem_slink&#34; title=&#34;Unix&#34; href=&#34;http://www.unix.org&#34; rel=&#34;homepage&#34;&gt;Unix&lt;/a&gt; &lt;a class=&#34;zem_slink&#34; title=&#34;Shell script&#34; href=&#34;http://en.wikipedia.org/wiki/Shell_script&#34; rel=&#34;wikipedia&#34;&gt;shell scripts&lt;/a&gt;, make files, windows &lt;a class=&#34;zem_slink&#34; title=&#34;Batch file&#34; href=&#34;http://en.wikipedia.org/wiki/Batch_file&#34; rel=&#34;wikipedia&#34;&gt;batch files&lt;/a&gt; etc can be used to define a build script.&lt;/p&gt;
&lt;p&gt;A framework / tool like &lt;a class=&#34;zem_slink&#34; title=&#34;Apache Ant&#34; href=&#34;http://ant.apache.org&#34; rel=&#34;homepage&#34;&gt;ANT&lt;/a&gt;, helps in abstracting the script from a platform dependency and use simple &lt;a class=&#34;zem_slink&#34; title=&#34;XML&#34; href=&#34;http://en.wikipedia.org/wiki/XML&#34; rel=&#34;wikipedia&#34;&gt;XML&lt;/a&gt; file to define the build script.&lt;br /&gt;
Interestingly ANT itself is only a XML notation, that defines the sequence of steps. The steps themselves rely on the code base, framework binaries, &lt;a class=&#34;zem_slink&#34; title=&#34;Software development kit&#34; href=&#34;http://en.wikipedia.org/wiki/Software_development_kit&#34; rel=&#34;wikipedia&#34;&gt;SDK&lt;/a&gt; binaries etc.&lt;br /&gt;
In summary using any suitable syntax a build script should be defined. The script itself should automate the sequence of steps that needs to be executed to create a single unit of software.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
