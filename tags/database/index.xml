<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shafiq Alibhai </title>
    <link>https://www.shafiq.in/tags/database/</link>
    <language>en-us</language>
    <author></author>
    <rights>(C) 2016</rights>
    <updated>2010-09-18 12:49:26 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Database Integration - some points to keep in mind</title>
          <link>https://www.shafiq.in/2010/09/18/database-integration-some-points-to-keep-in-mind/</link>
          <pubDate>Sat, 18 Sep 2010 12:49:26 UTC</pubDate>
          <author></author>
          <guid>https://www.shafiq.in/2010/09/18/database-integration-some-points-to-keep-in-mind/</guid>
          <description>&lt;p&gt;&lt;strong&gt;Always Have a Single, Authoritative Source For Your Schema&lt;br /&gt;
&lt;/strong&gt; Everyone should know where the official schema resides, and have a frictionless experience in getting a fresh database setup. One should be able to walk up to a computer, get the latest from source control, build, and run a simple tool to setup the database (in many scenarios, the build process can even setup a database if none exists, so the process is one step shorter).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Always Version Your Database&lt;br /&gt;
&lt;/strong&gt;The common goal is to propagate changes from development, to test, and ultimately to production in a controlled and consistent manner. A second goal is to have the ability to recreate a database at any point in time. This second goal is particularly important if you are shipping software to clients. If someone finds a bug in build 20100612.1 of your application, you must be able to recreate the application as it appeared in that build - database and all.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Never use a shared database server for development work.</title>
          <link>https://www.shafiq.in/2010/09/15/never-use-a-shared-database-server-for-development-work/</link>
          <pubDate>Wed, 15 Sep 2010 14:09:58 UTC</pubDate>
          <author></author>
          <guid>https://www.shafiq.in/2010/09/15/never-use-a-shared-database-server-for-development-work/</guid>
          <description>&lt;p&gt;Like many conveniences in software development, a shared database is a tar pit waiting to fossilize a project. Developers overwrite each other&#39;s changes. The changes I make on the server break the code on your development machine. Remote development is slow and difficult. Avoid using a shared database at all costs, as they ultimately waste time and help produce bugs.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
